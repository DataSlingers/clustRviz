% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solvers.R
\name{convex_biclustering}
\alias{convex_biclustering}
\title{Compute Convex BiClustering Solution Path on a User-Specified Grid}
\usage{
convex_biclustering(
  X,
  ...,
  lambda_grid,
  row_weights = sparse_rbf_kernel_weights(k = "auto", phi = "auto", dist.method =
    "euclidean", p = 2),
  col_weights = sparse_rbf_kernel_weights(k = "auto", phi = "auto", dist.method =
    "euclidean", p = 2),
  X.center.global = TRUE,
  norm = 2,
  status = (interactive() && (clustRviz_logger_level() \%in\% c("MESSAGE", "WARNING",
    "ERROR")))
)
}
\arguments{
\item{X}{The data matrix (\eqn{X \in R^{n \times p}}{X}).
If \code{X} has missing values - \code{NA} or
\code{NaN} values - they will be automatically imputed.}

\item{...}{Unused arguements. An error will be thrown if any unrecognized
arguments as given.}

\item{lambda_grid}{A user-supplied set of \eqn{\lambda}{lambda} values at which
to solve the convex biclustering problem. These must be strictly
positive values and will be automatically sorted internally.}

\item{row_weights}{One of the following: \itemize{
\item A function which, when called with argument \code{X},
      returns a n-by-n matrix of fusion weights.
\item A matrix of size n-by-n containing fusion weights
}
Note that the weights will be renormalized to sum to
\eqn{1/\sqrt{n}} internally.}

\item{col_weights}{One of the following: \itemize{
\item A function which, when called with argument \code{t(X)},
      returns a p-by-p matrix of fusion weights. (Note the
      transpose.)
\item A matrix of size p-by-p containing fusion weights
}
Note that the weights will be renormalized to sum to
\eqn{1/\sqrt{p}} internally.}

\item{X.center.global}{A logical: Should \code{X} be centered globally?
\emph{I.e.}, should the global mean of \code{X} be subtracted?}

\item{norm}{Which norm to use in the fusion penalty? Currently only \code{1}
and \code{2} (default) are supported.}

\item{status}{Should a status message be printed to the console?}
}
\value{
An object of class \code{convex_biclustering} containing the
        following elements (among others):
        \itemize{
        \item \code{X}: the original data matrix
        \item \code{n}: the number of observations (rows of \code{X})
        \item \code{p}: the number of variables (columns of \code{X})
        \item \code{U}: a tensor (3-array) of clustering solutions
        }
}
\description{
\code{convex_biclustering} calculates the convex biclustering solution path
at a user-specified grid of lambda values (or just a single value). It is,
in general, difficult to know a useful set of lambda values \emph{a priori},
so this function is more useful for timing comparisons and methodological
research than applied work.
}
\details{
Compared to the \code{\link{CBASS}} function, the returned object
is much more "bare-bones," containing only the estimated \eqn{U} matrices,
and no information used for dendrogram or path visualizations.
}
\examples{
\dontrun{
biclustering_fit <- convex_biclustering(presidential_speech, lambda_grid = 1:100)
print(biclustering_fit)
}
}
